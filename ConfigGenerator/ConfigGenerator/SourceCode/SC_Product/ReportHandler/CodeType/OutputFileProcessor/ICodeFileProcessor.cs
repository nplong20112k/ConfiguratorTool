namespace ConfigGenerator
{
    public enum CODE_FILE_PROCESSOR_TYPE
    {
        CODE_NORMAL_TABLE_FILE_PROCESSOR = 0,
        CODE_NORMAL_DELTA_TABLE_FILE_PROCESSOR,
        CODE_NORMAL_ACCESS_FUNCTION_FILE_PROCESSOR,
        CODE_NORMAL_VERIFY_EXCEPTION_FILE_PROCESSOR,
        CODE_NORMAL_SEARCH_ITEM_INDEX_FILE_PROCESSOR,

        CODE_SPECIAL_TABLE_FILE_PROCESSOR,
        CODE_SPECIAL_DELTA_TABLE_FILE_PROCESSOR,
        CODE_SPECIAL_VERIFY_RANGE_FILE_PROCESSOR,
        CODE_SPECIAL_VERIFY_SELECTION_VALUE_FILE_PROCESSOR,
        CODE_SPECIAL_VERIFY_READABLE_ASCII_FILE_PROCESSOR,
        CODE_CONVERT_HEX_INT_FILE_PROCESSOR,

        CODE_CHECKER,
        CODE_CI_ENUM_FILE_PROCESSOR,
        CODE_CI_ENUMERATION_FILE_PROCESSOR,
        CODE_STRUCTURE_FILE_PROCESSOR,
        CODE_INTERFACE_TYPEDEF_FILE_PROCESSOR,
        CODE_VERIFY_INTERFACE_FILE_PROCESSOR,
    }

    public interface ICodeFileProcessor
    {
        CODE_FILE_PROCESSOR_TYPE GetProcessorType();
        string[] LoadingFile(string sFilePath);
        bool CreateNewFile(string sFilePath);
        bool AddNewItem(string sData);
        bool CloseFile();
    }
}
